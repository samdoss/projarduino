@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/themes/base/css", "~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    <!--[if lte IE 8]><script language="javascript" type="text/javascript" src="~/Scripts/excanvas.min.js"></script><![endif]-->
    <script src="~/Scripts/jquery.flot.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.signalR-0.5.3.min.js" type="text/javascript"></script>
    <script src="/signalr/hubs" type="text/javascript"></script>
    <div id="body">
        <div style="text-align: center">
            <h1>
                Arduino output: <span id="priceHolder"></span>
            </h1>
            <div id="placeholder" style="width: 600px; height: 300px; margin: 0 auto">
            </div>
            <a href="http://symcafe.com" style="font-style: italic; font-size: medium">By: Roger</a>
        </div>
    </div>
    <script type="text/javascript">
        var ypt = [], totalPoints = 30;

        function initData() {
            for (var i = 0; i < totalPoints; ++i)
                ypt.push(0);
            return getPoints();

        }
        function getData(data) {
            if (ypt.length > 0)
                ypt = ypt.slice(1);
            ypt.push(data);
            return getPoints();
        }
        function getPoints() {
            var ret = [];
            for (var i = 0; i < ypt.length; ++i)
                ret.push([i, ypt[i]]);
            return ret;
        }

        // setup plot
        var options = {
            series: { shadowSize: 0, bars: {
                show: true,                
                barWidth: 0.25,
                fill: 1
            }
            }, // drawing is faster without shadows
            yaxis: { min: 0, max: 1300,
                tickFormatter: function (val, axis) {
                    return '' + val;
                }
            },
            xaxis: { show: false }
        };

        var plot = $.plot($("#placeholder"), [initData()], options);
        function update(data) {
            $('#priceHolder').text('Receive - ' + data);
            plot.setData([getData(data)]);
            plot.draw();
        }

        /******************************************/
        //Create the proxy
        var chartData = $.connection.chartData;

        function init() {
            return chartData.initData();
        }

        chartData.updateData = function (data) {
            update(data);
        }

        // Start the connection
        $.connection.hub.start(
    function () {
        init();
    });
       


    </script>
</body>
</html>
